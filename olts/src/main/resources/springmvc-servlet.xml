<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置spring mvc的组件：扫描controller, view resovle -->

    <!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.olts.controller"/>

    <!-- 配置*.js,*.css,*.jpg,*.html等的请不由DispatcherServlet处理，而直接交tomcat服务的默认Servlet来处理，
    不同的服务器其默认Servlet的名字是不同，但tomcat默认Servlet的名字叫“default”
    -->
    <mvc:default-servlet-handler/>

    <!--支持spring3.0+ 新的mvc注解,不加有些注解功能不行，如json转换的@ResponseBody
         <context:annotation-config/>
	      将隐式地向 Spring 容器注册
	1. AutowiredAnnotationBeanPostProcessor
	2. CommonAnnotationBeanPostProcessor
	3. PersistenceAnnotationBeanPostProcessor
	4. RequiredAnnotationBeanPostProcessor
	     这 4 个 BeanPostProcessor。

	     enable-matrix-variables="true": 启用@MatrixVariable
-->
    <mvc:annotation-driven >
        <mvc:async-support default-timeout="10"/><!--子元素可指定异步拦截器-->
    </mvc:annotation-driven>

  <mvc:interceptors>
        <!-- 全局拦截器，所有请求都会拦截 -->
        <bean class="com.olts.interceptor.GlobalHandlerInterceptor"/>
        <mvc:interceptor>
            <mvc:mapping path="/question/**"/>
            <mvc:exclude-mapping path="/user/**" />
            <bean class="com.olts.interceptor.AuthenticationInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 视图解析器：对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/views/" p:suffix=".jsp">
        <!--
        <property name="prefix" value="/views/" />
        <property name="suffix" value=".jsp" />
        -->
        <!-- 如果使用jstl的话，配置下面的属性 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

    <!-- 文件上传和下载的解析器 -->
    <!-- 文件上传和下载的解析器, 解析
           <form action="" enctype="multipart/form-data">
           </form>
           -->
  <!--  <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        &lt;!&ndash; 上传的缓存的大小 &ndash;&gt;
        <property name="maxInMemorySize" value="10240"/>
        &lt;!&ndash; 文件上传到本应用的upload目录中 &ndash;&gt;
        <property name="uploadTempDir" value="/upload"/>
        &lt;!&ndash; 上传文件的大小限制 &ndash;&gt;
        <property name="maxUploadSize" value="3145728"/>
    </bean>-->

</beans>